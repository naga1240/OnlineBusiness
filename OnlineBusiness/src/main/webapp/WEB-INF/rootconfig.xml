<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- import security config -->
    <import resource="springsecurity.xml" />
     <import resource="springmvc-servlet.xml" />
    <!-- needed for security tag lib expression support -->
<!--    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> -->
    <bean id="crudFacade" class="com.onlinebusiness.dataaccess.CRUDFacade">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean> 
    <bean id="dataFacade" class="com.onlinebusiness.dataaccess.DataFacadeFactory">
        <property name="crudFacade" ref="crudFacade" />
    </bean> 
        
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <!-- OR mapping files. -->
        <property name="packagesToScan" value="com.onlinebusiness"/>
            
       
    </bean>
     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
             <value>WEB-INF/jdbc.properties</value>
            </property>
    </bean>
    <!-- the datasource -->
    <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.databaseurl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    </bean>
    <!-- hibernate Properties -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="connection.pool_size">1</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    
    <tx:annotation-driven transaction-manager="txManager" />
    
    <!-- manually create the appService bean here -->
   
   <!-- Mail sender configuration -->
<!--   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="username" value="cs544.letmegiveexam"/>
        <property name="password" value="Letmegice@exam"/>
        <property name="javaMailProperties">
            <props>
                 Use SMTP transport protocol 
                <prop key="mail.transport.protocol">smtp</prop>
                 Use SMTP-AUTH to authenticate to SMTP server 
                <prop key="mail.smtp.auth">true</prop>
                 Use TLS to encrypt communication with SMTP server 
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>  
            </props>
        </property>
    </bean>-->
    
</beans>